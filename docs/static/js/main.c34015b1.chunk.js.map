{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","categorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","encontrado","find","item","trim","length","console","log","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyC,IAAtCC,EAAqC,EAArCA,cAAqC,IAAtBC,kBAAsB,MAAT,GAAS,EAElE,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAaP,EAAWQ,MAAK,SAAAC,GAAI,OAAIA,IAASP,KAEhDA,EAAWQ,OAAOC,OAAS,IAAMJ,GACnCR,EAAc,CAAEG,GAAH,mBAAiBF,KAEhCG,EAAc,IACdS,QAAQC,IAAI,SAAUX,IAItB,SACE,uBACEY,KAAK,OACLC,MAAQb,EACRc,SApBiB,SAACX,GACtBF,EAAcE,EAAEY,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATjB,kBAYbM,GAZa,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEjC,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAGxB,ECL0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACTxB,EAAQC,GACLwB,MAAK,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAACpB,IAEGqB,EDdiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACE,eAAC,WAAD,WACA,mCAAMpB,EAAN,OAEEoB,GAAW,cAEX,qBAAKJ,UAAU,YAAf,SAEIT,EAAKE,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWRgB,EA1BM,WAGnB,MAAoC7C,mBAAS,CAAC,aAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAEA,OACE,eAAC,WAAD,WACE,yCACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBACA,6BAEIA,EAAW4B,KAAM,SAAAT,GACf,OACE,cAAC,EAAD,CAEEA,UAAWA,GADNA,YCfrB4B,IAASC,OACL,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.c34015b1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategorias, categorias = [] }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleOnChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const encontrado = categorias.find(item => item === inputValue);\r\n\r\n    if (inputValue.trim().length > 2 && !encontrado) {\r\n      setCategorias( [inputValue,...categorias]);\r\n    }\r\n    setInputValue(\"\");\r\n    console.log(\"input:\", inputValue);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleOnChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n  categorias: PropTypes.array.isRequired    \r\n}; \r\n","\r\nexport const getGifs = async(categoria) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria) }&limit=10&api_key=UZgHd8Zauhexa000EvqDLpZHOGJx9UdD`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map( img => {\r\n     return {\r\n       id: img.id,\r\n       title: img.title,\r\n       url: img.images.downsized_medium.url\r\n     }\r\n   })\r\n   return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n  // console.log({id,title,url});\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//  \r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n\r\n  // const [images, setImages] = useState([]);\r\n  const {data, loading} = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <Fragment>\r\n    <h3> {categoria} </h3>\r\n\r\n    { loading && \"Cargando...\"}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          data.map( img => (\r\n            <GifGridItem \r\n              key={img.id} \r\n              {...img}\r\n            />    \r\n          ))\r\n        }\r\n      </div>\r\n    </Fragment>    \r\n  )\r\n}\r\n","import { useState, useEffect  } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(categoria)\r\n      .then(imgs => {\r\n                \r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      }\r\n    )\r\n\r\n  }, [categoria]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  // const categorias = [\"One Punch\", \"picachu\", \"Goku\"]\r\n  const [categorias, setCategorias] = useState([\"simpsons\"]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Gif App</h1>\r\n      <AddCategory setCategorias={setCategorias} categorias={categorias}/>\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categorias.map ( categoria => {\r\n            return (\r\n              <GifGrid\r\n                key={categoria} \r\n                categoria={categoria}/>\r\n            )              \r\n          })\r\n        }\r\n      </ol>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}